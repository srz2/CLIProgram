<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CLIProgram</name>
    </assembly>
    <members>
        <member name="T:CLIProgram.CLI.StartupCode">
            <summary>
            The status of the <see cref="M:CLIProgram.CLI.CliProgram.startupCheck"/> method
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.StartupCode.Unknown">
            <summary>
            Unknow startup status
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.StartupCode.Success">
            <summary>
            Success. Startup parameters were met
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.StartupCode.InvalidArgumentCount">
            <summary>
            Incorrect number of arguments are given
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.StartupCode.RequestingVersion">
            <summary>
            <para>Requesting version via the version tag</para>
            <para>See <see cref="M:CLIProgram.CLI.CliProgram.checkForVersionFlag(System.String)"/></para>
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.StartupCode.RequestingHelp">
            <summary>
            <para>Requesting help via a help tag</para>
            <para>See <see cref="M:CLIProgram.CLI.CliProgram.checkForHelpFlag(System.String)"/></para>
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.StartupCode.StartupCheckFailed">
            <summary>
            General startup check failed
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.StartupCode.CustomError">
            <summary>
            Custom error made outside of the library
            </summary>
        </member>
        <member name="T:CLIProgram.CLI.StartupResult">
            <summary>
            The result of the startup
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.StartupResult.code">
            <summary>
            The code for how the program started
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.StartupResult.message">
            <summary>
            Optional message
            </summary>
        </member>
        <member name="M:CLIProgram.CLI.StartupResult.createStartupResult(CLIProgram.CLI.StartupCode,System.String)">
            <summary>
            Creates a new <see cref="T:CLIProgram.CLI.StartupResult"/>
            </summary>
            <param name="code">The code for the status of the startup</param>
            <param name="msg">The optional message of the startup</param>
            <returns></returns>
        </member>
        <member name="T:CLIProgram.CLI.CliProgram">
            <summary>
            A class which must be interherited to signify a CLI program
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.CliProgram.Settings">
            <summary>
            Settings for the CLI application
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.CliProgram.Usage">
            <summary>
            General usage for the CLI application
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.CliProgram.Error">
            <summary>
            Error handling for the CLI application
            </summary>
        </member>
        <member name="P:CLIProgram.CLI.CliProgram.Initialized">
            <summary>
            The CLI Program class has been initialized
            </summary>
        </member>
        <member name="M:CLIProgram.CLI.CliProgram.#ctor(System.String[],System.Int32)">
            <summary>
            Constructor for the CLIProgram Helper
            </summary>
            <param name="args">The program's given argument list</param>
            <param name="minArgs">The minimum allowed arguments</param>
        </member>
        <member name="M:CLIProgram.CLI.CliProgram.startupCheck">
            <summary>
            <para>Overridable statup check</para>
            <para>This method evaluates CLI arguments and any other information on startup (via override)</para>
            <para></para>
            <para>Note: Supermethod should be called</para>
            </summary>
            <returns>The result of the startup</returns>
        </member>
        <member name="M:CLIProgram.CLI.CliProgram.Start">
            <summary>
            <para>Overrideable start method</para>
            <para></para>
            <para>NOTE: Supermethod should be called</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:CLIProgram.CLI.CliProgram.Stop">
            <summary>
            <para>Overrideable Stop method which will terminate the application successfully</para>
            </summary>
        </member>
        <member name="T:CLIProgram.CLI.Support.DefaultCode">
            <summary>
            The default code values
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.Support.DefaultCode.SUCCESS">
            <summary>
            Default Code for success
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.Support.DefaultCode.GENERAL">
            <summary>
            Default code for a general error
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.Support.DefaultCode.SHOWVERSION">
            <summary>
            Default Code for version
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.Support.DefaultCode.SHOWHELP">
            <summary>
            Default Code for help
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.Support.DefaultCode.INVALIDARGS">
            <summary>
            Default code for invalid args
            </summary>
        </member>
        <member name="T:CLIProgram.CLI.Support.CliProgramError">
            <summary>
            A class representing the functionality of error handling
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.Support.CliProgramError.DefaultCodes">
            <summary>
            The default codes
            </summary>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramError.#ctor">
            <summary>
            The constructor for error handling class
            </summary>
        </member>
        <member name="P:CLIProgram.CLI.Support.CliProgramError.ErrorCodes">
            <summary>
            Get the list of error codes
            </summary>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramError.addErrorCode(System.String)">
            <summary>
            Add an error code
            </summary>
            <param name="message">The message for the error code</param>
            <returns></returns>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramError.clearSpecificErrorCode(System.Int32)">
            <summary>
            Clear a specific error code
            </summary>
            <param name="code">Clear an error code</param>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramError.clearAllErrorCodes">
            <summary>
            Clear all stored error codes except for the default codes
            </summary>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramError.quit(System.Int32,System.String)">
            <summary>
            Quit with an error code and optional message
            </summary>
            <param name="code">The error code to exit with</param>
            <param name="msg">The message to display in addition to the error code/message</param>
        </member>
        <member name="T:CLIProgram.CLI.Support.CliProgramSettings">
            <summary>
            A class to represent the settings of the application
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.Support.CliProgramSettings.DEBUG">
            <summary>
            <para>Use debug mode</para>
            <para>Default: FALSE</para>
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.Support.CliProgramSettings.QUIT_WITH_ERROR_MESSAGE">
            <summary>
            <para>If message exists with error code, display it</para>
            <para>Default: TRUE</para>
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.Support.CliProgramSettings.PAUSE_ON_QUIT">
            <summary>
            <para>Use Console.ReadKey() on quitting the application on the Quit() method in order to pause the quitting process</para>
            <para>Default: FALSE</para>
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.Support.CliProgramSettings.SHOW_HELP_WITH_ARGC_ZERO">
            <summary>
            <para>Show the help menu if zero arguments are given when application is launched</para>
            <para>Default: FALSE</para>
            </summary>
        </member>
        <member name="P:CLIProgram.CLI.Support.CliProgramSettings.MinArgs">
            <summary>
            The minimum number of arguments expected
            </summary>
        </member>
        <member name="P:CLIProgram.CLI.Support.CliProgramSettings.ProgramArgs">
            <summary>
            The arguments given at program start
            </summary>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramSettings.#ctor(System.String[],System.Int32)">
            <summary>
            The constructor for creating the settings for the application
            </summary>
            <param name="args"></param>
            <param name="n_MinArgs"></param>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramSettings.getProgramName">
            <summary>
            Get the name of the application
            </summary>
            <returns></returns>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramSettings.getVersionInfo">
            <summary>
            Get the version of the application
            </summary>
            <returns></returns>
        </member>
        <member name="T:CLIProgram.CLI.Support.CliProgramUsage">
            <summary>
            A class for tracking app usage
            </summary>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramUsage.#ctor">
            <summary>
            Constructor for application usage
            </summary>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramUsage.ToString">
            <summary>
            Get a string reprentation of the usage docs
            </summary>
            <returns></returns>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramUsage.ToArray">
            <summary>
            Get an array representing the usage of an application
            </summary>
            <returns></returns>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramUsage.addToHelp(System.String)">
            <summary>
            Add a message to the help docs
            </summary>
            <param name="helpMessage"></param>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramUsage.clearHelp">
            <summary>
            Clear the help docs
            </summary>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramUsage.showHelp">
            <summary>
            Print the help in the console
            </summary>
        </member>
        <member name="M:CLIProgram.CLI.Support.CliProgramUsage.getHelp">
            <summary>
            Get the list of strings which make up the help prompt
            </summary>
        </member>
        <member name="T:CLIProgram.CLI.Base.CliProgramBase">
            <summary>
            Base class for an CLI Program
            </summary>
        </member>
        <member name="F:CLIProgram.CLI.Base.CliProgramBase.ip_mRoot">
            <summary>
            The root reference
            </summary>
        </member>
        <member name="M:CLIProgram.CLI.Base.CliProgramBase.SetParent(CLIProgram.CLI.CliProgram)">
            <summary>
            Set the root reference
            </summary>
            <param name="obj">Should be reference for the root cli program</param>
        </member>
    </members>
</doc>
